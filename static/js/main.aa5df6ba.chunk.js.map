{"version":3,"sources":["Loader/Loader.jsx","Table/Arrows.jsx","Table/Table.jsx","Userinfo/Userinfo.jsx","SelectData/SelectData.jsx","Pagination/Pagination.jsx","Search/Search.jsx","EmptySearch/EmptySearch.jsx","Select/Select.jsx","App.js","index.js"],"names":["Loader","className","Arrows","props","sortDirection","sortField","field","Table","i","onClick","onSort","dataUsers","map","user","getLine","id","firstName","lastName","email","phone","city","Userinfo","rowClicked","address","streetAddress","zip","SelectData","modeSelect","Pagination","getRange","start","end","Array","fill","v","pageArray","currentPage","pageCount","range","Math","round","delta","pages","min","withDots","value","pair","length","concat","pagination","changePage","disabled","page","Number","isInteger","Search","useState","setValue","type","placeholder","onChange","e","target","onClickedSearch","EmptySearch","Select","handleChangeSelect","App","state","selectData","isLoading","data","search","sort","countItem","cloneData","prev","next","setState","amount","loadingData","getDataFiltered","filter","item","toLowerCase","includes","a","fetch","response","json","this","displayData","dataFiltered","ceil","push","slice","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aa5df6ba.chunk.js","sourcesContent":["import './Loader.css'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className='loading'>\r\n            <div className='lds-roller'>\r\n                <div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Loader;","const Arrows = (props) => {\r\n    return (\r\n        <div className='arrows'>\r\n            <span className=\r\n                {`arrows__defalut ${!props.sortDirection & props.sortField === props.field ? 'arrows__active' : ''}`}>↓\r\n            </span>\r\n            <span className=\r\n                {`arrows__defalut ${props.sortDirection & props.sortField === props.field ? 'arrows__active' : ''}`}>↑\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Arrows;","import Arrows from './Arrows';\r\nimport './Table.css'\r\n\r\nconst Table = (props) => {\r\n    let i = 0;\r\n    return (\r\n        <table className='table'>\r\n            <thead>\r\n                <tr>\r\n                    <th onClick={() => props.onSort('id')}>\r\n                        <div className='table__cell-wrapper'>\r\n                            <div>ID</div>\r\n                            <Arrows sortField={props.sortField} sortDirection={props.sortDirection} field='id' />\r\n                        </div>\r\n                    </th>\r\n                    <th onClick={() => props.onSort('firstName')}>\r\n                        <div className='table__cell-wrapper'>\r\n                            <div>Имя</div>\r\n                            <Arrows sortField={props.sortField} sortDirection={props.sortDirection} field='firstName' />\r\n                        </div>\r\n                    </th>\r\n                    <th onClick={() => props.onSort('lastName')}>\r\n                        <div className='table__cell-wrapper'>\r\n                            <div>Фамилия</div>\r\n                            <Arrows sortField={props.sortField} sortDirection={props.sortDirection} field='lastName' />\r\n                        </div>\r\n                    </th>\r\n                    <th>\r\n                        <div>Почта</div>\r\n                    </th>\r\n                    <th>\r\n                        <div>Телефон</div>\r\n                    </th>\r\n                    <th onClick={() => props.onSort('city')}>\r\n                        <div className='table__cell-wrapper'>\r\n                            <div>Город</div>\r\n                            <Arrows sortField={props.sortField} sortDirection={props.sortDirection} field='city' />\r\n                        </div>\r\n                    </th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {props.dataUsers.map(user => (\r\n                    <tr key={i++} onClick={() => props.getLine(user)}>\r\n                        <td>{user.id}</td>\r\n                        <td>{user.firstName}</td>\r\n                        <td>{user.lastName}</td>\r\n                        <td>{user.email}</td>\r\n                        <td>{user.phone}</td>\r\n                        <td>{user.city}</td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default Table;","import './Userinfo.css'\r\n\r\nconst Userinfo = (props) => {\r\n    return (\r\n        <>\r\n            {props.rowClicked\r\n                ? <div className='user-info'>\r\n                    <div className='user-info__item'>\r\n                        <span>Пользователь:</span> {props.rowClicked.firstName} {props.rowClicked.lastName}\r\n                    </div>\r\n                    <div className='user-info__item'>\r\n                        <span>Город:</span> {props.rowClicked.address.city}\r\n                    </div>\r\n                    <div className='user-info__item'>\r\n                        <span>Адрес:</span> {props.rowClicked.address.streetAddress}\r\n                    </div>\r\n                    <div className='user-info__item'>\r\n                        <span>Индекс:</span> {props.rowClicked.address.zip}\r\n                    </div>\r\n                </div>\r\n                : ''}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Userinfo;","import './SelectData.css'\r\n\r\nconst SelectData = (props) => {\r\n    return (\r\n        <div className='buttons'>\r\n            <button className='buttons__item' onClick={() => props.modeSelect(100)}>100 элменетов</button>\r\n            <button className='buttons__item' onClick={() => props.modeSelect(1000)}>1000 элементов</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectData;","import './Pagination.css'\r\n\r\nconst Pagination = (props) => {\r\n    const getRange = (start, end) => {\r\n        return Array(end - start + 1)\r\n            .fill()\r\n            .map((v, i) => i + start)\r\n    }\r\n\r\n    const pagination = (currentPage, pageCount) => {\r\n        let delta = 3;\r\n\r\n        const range = {\r\n            start: Math.round(currentPage - delta / 2 - 1),\r\n            end: Math.round(currentPage + delta / 2)\r\n        }\r\n\r\n        if (range.start - 1 === 1 || range.end + 1 === pageCount) {\r\n            range.start += 1\r\n            range.end += 1\r\n        }\r\n\r\n        let pages =\r\n            currentPage > delta\r\n                ? getRange(Math.min(range.start, pageCount - delta), Math.min(range.end, pageCount))\r\n                : getRange(0, Math.min(pageCount, delta + 1))\r\n\r\n        const withDots = (value, pair) => (pages.length + 1 !== pageCount ? pair : [value])\r\n\r\n        if (pages[0] !== 0) {\r\n            pages = withDots(1, [0, '…']).concat(pages)\r\n        }\r\n\r\n        if (pages[pages.length - 1] < pageCount) {\r\n            pages = pages.concat(withDots(pageCount, ['…', pageCount]))\r\n        }\r\n\r\n        return pages\r\n    }\r\n    const pageArray = pagination(props.currentPage, props.pageCount)\r\n    \r\n    return (\r\n        <ul className='pagination'>\r\n            <li onClick={() => props.changePage(props.currentPage - 1)}>\r\n                <button className={'pagination__switch pagination__arrow'}\r\n                        disabled={props.currentPage === 0}>◄ Назад</button>\r\n            </li>\r\n            {\r\n                pageArray.map(page => (\r\n                    Number.isInteger(page)\r\n                        ? <li className={`pagination__switch pagination__count ${props.currentPage === page ? 'pagination__count_active' : ''}`}\r\n                            onClick={() => props.changePage(page)}>\r\n                            {page + 1}\r\n                        </li>\r\n                        : <li>{page}</li>\r\n                ))\r\n            }\r\n            <li onClick={() => props.changePage(props.currentPage + 1)}>\r\n                <button className={'pagination__switch pagination__arrow'}\r\n                        disabled={props.currentPage === props.pageCount}>Вперёд ►</button>\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Pagination;","import { useState } from 'react';\r\nimport './Search.css'\r\n\r\nconst Search = (props) => {\r\n\r\n    const [value, setValue] = useState();\r\n    \r\n    const setValueHandler = e => setValue(e.target.value);\r\n\r\n    return (\r\n        <div className='search'>\r\n            <input \r\n                className='search__input' \r\n                type=\"text\" \r\n                placeholder='Поиск...' \r\n                value={value || ''} \r\n                onChange={setValueHandler} />\r\n            <button \r\n                className='search__btn'\r\n                onClick={() => props.onClickedSearch(value)} >Найти</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;","import './EmptySearch.css'\r\n\r\nconst EmptySearch = () => {\r\n    return (\r\n        <div className='empty-search'>\r\n            Поиск не дал результатов :(\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmptySearch;","import './Select.css'\r\n\r\nconst Select = (props) => {\r\n    return (\r\n        <select className='select' value={props.value} onChange={props.handleChangeSelect}>\r\n            <option value='12'>12 элементов</option>\r\n            <option value='18'>18 элементов</option>\r\n            <option value='28'>28 элементов</option>\r\n            <option value='50'>50 элементов</option>\r\n            <option value='80'>80 элементов</option>\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default Select;","import './App.css';\nimport React from 'react';\nimport Loader from './Loader/Loader';\nimport Table from './Table/Table';\nimport Userinfo from './Userinfo/Userinfo';\nimport SelectData from './SelectData/SelectData';\nimport Pagination from './Pagination/Pagination';\nimport Search from './Search/Search';\nimport EmptySearch from './EmptySearch/EmptySearch';\nimport Select from './Select/Select';\n\nclass App extends React.Component {\n\n\tstate = {\n\t\tselectData: true, // Первый экран\n\t\tisLoading: false, // Лоадер\n\t\tdata: [], // Данные с сервера\n\t\tsearch: null, // Строка поиска\n\t\tsort: true, // Направление сортировки\n\t\tsortField: null, // Сортрируемое поле\n\t\trowClicked: null, // Нажатая строка\n\t\tcurrentPage: 0, // Текущая страница\n\t\tcountItem: 28\n\t}\n\n\tasync loadingData(amount) { // Получение данных с сервера\n\t\tconst response = await fetch(`http://www.filltext.com/?rows=${amount}&firstName={firstName}&lastName={lastName}&id={number|1000}&email={email}&phone={phone|format}&city={city}&address={addressObject}`)\n\t\tconst dataUsers = await response.json();\n\t\tthis.setState({\n\t\t\tdata: dataUsers,\n\t\t\tisLoading: false\n\t\t})\n\t}\n\n\tonSort = (sortField) => { // Сортировка\n\t\tconst cloneData = [...this.state.data];\n\t\tif (this.state.sort || this.state.sortField !== sortField) {\n\t\t\tcloneData.sort((prev, next) => prev[sortField] > next[sortField] ? 1 : -1);\n\t\t}\n\t\tif (!this.state.sort && this.state.sortField === sortField) {\n\t\t\tcloneData.sort((prev, next) => prev[sortField] < next[sortField] ? 1 : -1);\n\t\t}\n\t\tthis.setState({\n\t\t\tdata: cloneData,\n\t\t\tsort: this.state.sortField === sortField ? !this.state.sort : false,\n\t\t\tsortField\n\t\t})\n\t}\n\n\tgetLine = (user) => { // Нажатая строка\n\t\tthis.setState({\n\t\t\trowClicked: user\n\t\t})\n\t}\n\n\tmodeSelect = (amount) => { // Загрузка данных после первого экрана\n\t\tthis.setState({\n\t\t\tselectData: false,\n\t\t\tisLoading: true\n\t\t})\n\t\tthis.loadingData(amount);\n\t}\n\n\tchangePage = (currentPage) => { // Изменение активной страницы\n\t\tthis.setState({\n\t\t\tcurrentPage\n\t\t})\n\t}\n\n\tonClickedSearch = (value) => { // Клик по кнопке \"Поиск\"\n\t\tthis.setState({\n\t\t\tsearch: value,\n\t\t\tcurrentPage: 0\n\t\t})\n\t}\n\n\tgetDataFiltered = () => { // Отфильтрованные данные, по умолчанию без фильтра\n\t\tconst { data, search } = this.state;\n\t\tif (!search) return data;\n\t\treturn data.filter(item =>\n\t\t\titem.firstName.toLowerCase().includes(search.toLowerCase())\n\t\t\t|| item.lastName.toLowerCase().includes(search.toLowerCase())\n\t\t\t|| item.email.toLowerCase().includes(search.toLowerCase())\n\t\t)\n\t}\n\n\thandleChangeSelect = (e) => {\n\t\tthis.setState({\n\t\t\tcountItem: +e.target.value,\n\t\t\tcurrentPage: 0\n\t\t})\n\t}\n\n\trender() {\n\t\tif (this.state.selectData) {\n\t\t\treturn <SelectData modeSelect={this.modeSelect} />\n\t\t}\n\t\tconst displayData = [];\n\t\tconst dataFiltered = this.getDataFiltered();\n\t\tfor (let i = 0; i < Math.ceil(dataFiltered.length / this.state.countItem); i++) {\n\t\t\tdisplayData.push(dataFiltered.slice((i * this.state.countItem), (i * this.state.countItem) + this.state.countItem));\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t{\n\t\t\t\t\tthis.state.isLoading\n\t\t\t\t\t\t? <Loader />\n\t\t\t\t\t\t: <>\n\t\t\t\t\t\t\t<header className='header'>\n\t\t\t\t\t\t\t\t<Search onClickedSearch={this.onClickedSearch} />\n\t\t\t\t\t\t\t\t<Select value={this.state.countItem} handleChangeSelect={this.handleChangeSelect} />\n\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayData.length > 0\n\t\t\t\t\t\t\t\t\t? <>\n\t\t\t\t\t\t\t\t\t\t<Table\n\t\t\t\t\t\t\t\t\t\t\tdataUsers={displayData[this.state.currentPage]}\n\t\t\t\t\t\t\t\t\t\t\tonSort={this.onSort}\n\t\t\t\t\t\t\t\t\t\t\tsortField={this.state.sortField}\n\t\t\t\t\t\t\t\t\t\t\tsortDirection={this.state.sort}\n\t\t\t\t\t\t\t\t\t\t\tgetLine={this.getLine}\n\t\t\t\t\t\t\t\t\t\t\tcurrentPage={this.state.currentPage} />\n\t\t\t\t\t\t\t\t\t\t<Userinfo\n\t\t\t\t\t\t\t\t\t\t\trowClicked={this.state.rowClicked} />\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t: <EmptySearch />\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdataFiltered.length > this.state.countItem\n\t\t\t\t\t\t\t\t\t? <Pagination\n\t\t\t\t\t\t\t\t\t\tpageCount={displayData.length - 1}\n\t\t\t\t\t\t\t\t\t\tcountItem={this.state.countItem}\n\t\t\t\t\t\t\t\t\t\tcurrentPage={this.state.currentPage}\n\t\t\t\t\t\t\t\t\t\tchangePage={this.changePage} />\n\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}